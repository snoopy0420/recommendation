import os
from typing import Optional
import numpy as np
import pandas as pd

from model import Model
from util import Util, Metric

import implicit
from scipy.sparse import lil_matrix
from scipy.sparse import csr_matrix

class Model_iALS(Model):

    def train(self, dataset):
        """
        Args:
            dataset: pd.DataFrame
        """

        # パラメータ
        params = dict(self.params)
        ## 因子数
        factors = params.pop("factors", 10)
        ## 評価数の閾値
        minimum_num_rating = params.pop("minimum_num_rating", 0)
        ## エポック数
        n_epochs = params.pop("n_epochs", 50)
        ## alpha
        alpha = params.pop("alpha", 1.0)

        # データセットの準備（movie_id * user_id）
        ## 評価値で抜き出し
        filtered_movielens_train = dataset.groupby("movie_id").filter(
            lambda x: len(x["movie_id"]) >= minimum_num_rating
        )
        ## 行列分解用に行列を作成する
        movielens_train_high_rating = filtered_movielens_train[dataset.rating >= 4]

        unique_user_ids = sorted(movielens_train_high_rating.user_id.unique())
        unique_movie_ids = sorted(movielens_train_high_rating.movie_id.unique())
        user_id2index = dict(zip(unique_user_ids, range(len(unique_user_ids))))
        movie_id2index = dict(zip(unique_movie_ids, range(len(unique_movie_ids))))

        movielens_matrix = lil_matrix((len(unique_movie_ids), len(unique_user_ids)))
        for i, row in movielens_train_high_rating.iterrows():
            user_index = user_id2index[row["user_id"]]
            movie_index = movie_id2index[row["movie_id"]]
            movielens_matrix[movie_index, user_index] = 1.0 * alpha

        ## (user_id * movie_id)に転置
        ## csr matrixに変換
        movielens_matrix = csr_matrix(movielens_matrix.T)

        # モデルの初期化
        self.model = implicit.als.AlternatingLeastSquares(
            factors=factors, iterations=n_epochs, calculate_training_loss=True, random_state=1
        )

        # 学習
        self.model.fit(movielens_matrix)
        

    def predict(self, te_x):
        recommendations = self.model.recommend_all(movielens_matrix)